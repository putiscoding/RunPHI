#!/bin/bash

containerid="$1"
crundir="$2"
conf="$3"
hyperv="$4"

bundle=$( cat "$crundir"/bundle ) #si prende il path a  bundle 
pidfile=$( cat "$crundir"/pidfile ) #si prende il path a pidfile 
configfile="$bundle"/config.json




case $hyperv in

  "XEN")
	cmdline=\"`cat $configfile | jq  -c -r '.["process"]["args"] | join("\" \"")'`\" #si prende gli argomenti nel config file (eg sh in default spec) 
	mountpoint=$( cat "$crundir"/rootfs )
	
	echo $cmdline > $mountpoint/cmdline
	
	xl create -p $conf > /dev/null 2>&1

	pid=$( ps | grep -v grep | grep "xl create -p $outconfig" | awk '{print $1}' )
	echo -n "$pid" > "$pidfile"
	
    ;;

  "Jailhouse")
	
	if test -a "$crundir"/kernel && test -a "$crundir"/initrd
	then 
		## linux non-root cell 
		#
		kernel=$( cat "$crundir"/kernel)
		initrd=$( cat "$crundir"/initrd)
		
		#check Arch 
		arch=$(lscpu | grep Architecture | awk '{print $2}')
		
		case $arch in

		"x86_64")
			# echo -e "x86\n"
			##			
			jailhouse cell linux $conf $kernel -i $initrd -c "console=ttyS0,115200"
			
			pid=$( ps | grep -v grep | grep "jailhouse cell linux $conf" | awk '{print $1}' )
			echo -n "$pid" > "$pidfile"
			;;

		"aarch32" | "aarch64")
			#echo -e "$arch\n"
			##Retrieve path to dtb (in base alla rootcell) 
			dtb=/path/to/dtb 
			jailhouse cell linux $conf $kernel -d $dtb -i $initrd -c "console=ttyS0,115200"
			;;

		*)
			echo -e "Arch not recognised\n"
			exit 1
			;;
		esac
		
		pid=$( ps | grep -v grep | grep "jailhouse cell linux $conf" | awk '{print $1}' )
		echo -n "$pid" > "$pidfile"
		
	else 
		##retrieve path to inmate 
		inmate=/path/to/inmate 
		
		jailhouse cell create $conf            
		jailhouse cell load $containerid $inmate 
		
		pid=$( ps | grep -v grep | grep "jailhouse cell create $conf" | awk '{print $1}' )
		echo -n "$pid" > "$pidfile"
	fi 
    ;;
	
  *)
	##Open brackets for future RT_Hyperv
    ;;
esac 
